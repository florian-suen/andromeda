enum AttachmentType {
  IMAGE
  VIDEO
}

type Attachment @model @auth(rules: [{allow: public}]) {
  id: ID!
  storageKey: String!
  type: AttachmentType!
  messageID: ID! @index(name: "byMessage")
  chatgroupID: ID! @index(name: "byChatGroup")
  name: String!
}

type Friends @model @auth(rules: [{allow: public}]) {
  id: ID!
}

type ChatGroup @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  image: String
  LastMessage: Message @hasOne
  Messages: [Message] @hasMany(indexName: "byChatGroup", fields: ["id"])
  users: [UserChatGroup] @hasMany(indexName: "byChatGroupUser", fields: ["id"])
  leaderID: ID @index(name: "byUser")
  Attachments: [Attachment] @hasMany(indexName: "byChatGroup", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String!
  status: String
  image: String
  Messages: [Message] @hasMany(indexName: "byUser", fields: ["id"])
  ChatGroups: [UserChatGroup] @hasMany(indexName: "byUserChatGroup", fields: ["id"])
  Leader: [ChatGroup] @hasMany(indexName: "byUser", fields: ["id"])
}

type UserChatGroup @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUserChatGroup", sortKeyFields: ["updatedAt"], queryField: "ListbyUserChatGroup")
  chatgroupID: ID! @index(name: "byChatGroupUser", sortKeyFields: ["updatedAt"], queryField: "ListbyChatGroupUser")
  updatedAt: AWSDateTime!
  Chatgroup: ChatGroup @belongsTo(fields: ["chatgroupID"])
  user: User @belongsTo(fields: ["userID"])
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime
  message: String
  userID: ID! @index(name: "byUser")
  chatgroupID: ID! @index(name: "byChatGroup", sortKeyFields: ["createdAt"], queryField: "listMessagesByChatGroup")
  images: [String]
  Attachments: [Attachment] @hasMany(indexName: "byMessage", fields: ["id"])
}
  